<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="AlgoHelper.php" path="/helpers">
    <totals>
      <lines total="130" comments="36" code="94" executable="54" executed="39" percent="72.22"/>
      <methods count="4" tested="2" percent="50.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="lb\components\helpers\AlgoHelper" start="12" executable="54" executed="39" crap="32.37">
      <package full="lb" name="lb" sub="" category=""/>
      <namespace name="lb\components\helpers"/>
      <method name="depthFirst" signature="depthFirst($binaryTree, \Closure $callback = null)" start="18" end="27" crap="12" executable="6" executed="0" coverage="0"/>
      <method name="breadthFirst" signature="breadthFirst($binaryTree)" start="32" end="45" crap="20" executable="9" executed="0" coverage="0"/>
      <method name="reverseTree" signature="reverseTree($binaryTree)" start="51" end="62" crap="3" executable="7" executed="7" coverage="100"/>
      <method name="dijkstra" signature="dijkstra($G, &amp;$d, $startNode = 0)" start="70" end="129" crap="12" executable="32" executed="32" coverage="100"/>
    </class>
    <coverage>
      <line nr="53">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testReverseTree"/>
      </line>
      <line nr="54">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testReverseTree"/>
      </line>
      <line nr="55">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testReverseTree"/>
      </line>
      <line nr="56">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testReverseTree"/>
      </line>
      <line nr="57">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testReverseTree"/>
      </line>
      <line nr="59">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testReverseTree"/>
      </line>
      <line nr="61">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testReverseTree"/>
      </line>
      <line nr="72">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="75">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="76">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="77">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="78">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="79">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="81">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="82">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="86">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="89">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="90">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="91">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="94">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="95">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="97">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="99">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="103">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="105">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="106">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="107">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="108">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="109">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="110">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="112">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="116">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="117">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="120">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="121">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="122">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="124">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="127">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
      <line nr="129">
        <covered by="lb\tests\components\helpers\AlgoHelperTest::testDijkstra"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">lb</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">components</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">helpers</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">lb</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">BaseClass</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6"/>
      <line no="7">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> * Class AlgoHelper</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> * @package lb\components\helpers</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="12">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AlgoHelper</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">BaseClass</token>
      </line>
      <line no="13">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT">     * @param $binaryTree</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT">     * @param \Closure|null $callback</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">depthFirst</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$binaryTree</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Closure</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$binaryTree</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">call_user_func_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'node'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$children</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'children'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$children</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">depthFirst</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$children</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$callback</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="30">
        <token name="T_DOC_COMMENT">     * @param $binaryTree</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">breadthFirst</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$binaryTree</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$children</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$binaryTree</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">var_dump</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'value'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$nodeChild</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'children'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nodeChild</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$children</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_merge</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$children</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$nodeChild</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$children</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">breadthFirst</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$children</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="46"/>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="48">
        <token name="T_DOC_COMMENT">     * @param $binaryTree</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT">     * @return array</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">reverseTree</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$binaryTree</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$tempArr</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$binaryTree</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$k</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$nodeChild</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'children'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nodeChild</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'children'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">reverseTree</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$nodeChild</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">array_unshift</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$tempArr</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$tempArr</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="63"/>
      <line no="64">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="65">
        <token name="T_DOC_COMMENT">     * @param $G</token>
      </line>
      <line no="66">
        <token name="T_DOC_COMMENT">     * @param $d</token>
      </line>
      <line no="67">
        <token name="T_DOC_COMMENT">     * @param int $startNode</token>
      </line>
      <line no="68">
        <token name="T_DOC_COMMENT">     * @return \Generator</token>
      </line>
      <line no="69">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">dijkstra</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$G</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AMPERSAND">&amp;</token>
        <token name="T_VARIABLE">$d</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$startNode</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$totalNode</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$G</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73"/>
      <line no="74">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//&#x5B58;&#x50A8;&#x5DF2;&#x7ECF;&#x9009;&#x62E9;&#x8282;&#x70B9;&#x548C;&#x5269;&#x4F59;&#x8282;&#x70B9;</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$U</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$startNode</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$V</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOR">for</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$j</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$j</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$totalNode</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INC">++</token>
        <token name="T_VARIABLE">$j</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$j</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$startNode</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$V</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$j</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">            </token>
        <token name="T_YIELD">yield</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="84"/>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//&#x5B58;&#x50A8;&#x8DEF;&#x5F84;&#x4E0A;&#x8282;&#x70B9;&#x8DDD;&#x79BB;&#x6E90;&#x70B9;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$d</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="87"/>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//&#x521D;&#x59CB;&#x5316;&#x56FE;&#x4E2D;&#x8282;&#x70B9;&#x4E0E;&#x6E90;&#x70B9;&#x7684;&#x6700;&#x5C0F;&#x8DDD;&#x79BB;</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOR">for</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$totalNode</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_INC">++</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$startNode</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="93"/>
      <line no="94">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$G</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$startNode</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$d</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$G</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$startNode</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$d</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1000000</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">            </token>
        <token name="T_YIELD">yield</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="101"/>
      <line no="102">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//n-1&#x6B21;&#x5FAA;&#x73AF;&#x5B8C;&#x6210;&#x8F6C;&#x79FB;&#x8282;&#x70B9;&#x4EFB;&#x52A1;</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOR">for</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$l</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$l</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$totalNode</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$l</token>
        <token name="T_INC">++</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//&#x67E5;&#x627E;&#x5269;&#x4F59;&#x8282;&#x70B9;&#x4E2D;&#x8DDD;&#x79BB;&#x6E90;&#x70B9;&#x6700;&#x8FD1;&#x7684;&#x8282;&#x70B9;v</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$current_min</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">100000</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$current_min_v</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$startNode</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$V</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$k</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$d</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$current_min</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$current_min</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$d</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$current_min_v</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$v</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">                </token>
        <token name="T_YIELD">yield</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="114"/>
      <line no="115">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//&#x4ECE;V&#x4E2D;&#x66F4;&#x65B0;&#x9876;&#x70B9;&#x5230;U&#x4E2D;</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">array_push</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$U</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$current_min_v</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">array_splice</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$V</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">array_search</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$current_min_v</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$V</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="118"/>
      <line no="119">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//&#x66F4;&#x65B0;</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$V</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$k</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$u</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$G</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$current_min_v</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$u</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_EQUAL">!=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$d</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$u</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$d</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$current_min_v</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS">+</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$G</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$current_min_v</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$u</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$d</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$u</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$d</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$current_min_v</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS">+</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$G</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$current_min_v</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$u</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">                </token>
        <token name="T_YIELD">yield</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="126"/>
      <line no="127">
        <token name="T_WHITESPACE">            </token>
        <token name="T_YIELD">yield</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="130">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="131"/>
    </source>
  </file>
</phpunit>
