<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="HashHelper.php" path="/helpers">
    <totals>
      <lines total="91" comments="30" code="61" executable="26" executed="19" percent="73.08"/>
      <methods count="3" tested="1" percent="33.33"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="lb\components\helpers\HashHelper" start="9" executable="26" executed="19" crap="14.81">
      <package full="" name="" sub="" category=""/>
      <namespace name="lb\components\helpers"/>
      <method name="hash" signature="hash($str, $algo = self::MD5_HASH, $hmacKey = '', $rawOuput = false, $salt = null, $passwordAlgo = PASSWORD_DEFAULT, $passwordOptions = [])" start="29" end="53" crap="7.77" executable="16" executed="12" coverage="75"/>
      <method name="flexiHash" signature="flexiHash($str)" start="61" end="71" crap="2" executable="7" executed="7" coverage="100"/>
      <method name="murmurhash" signature="murmurhash($str, int $seed = 0, $isInt = false, $version = 3)" start="83" end="90" crap="12" executable="3" executed="0" coverage="0"/>
    </class>
    <coverage>
      <line nr="31">
        <covered by="lb\tests\components\SecurityPasswordTest::testGeneratePasswordHash"/>
        <covered by="lb\tests\components\SecurityPasswordTest::testVerifyPassword"/>
        <covered by="lb\tests\components\SecurityTest::testGenerateCsrfToken"/>
        <covered by="lb\tests\components\distribution\FlexiHashTest::testLookUp"/>
        <covered by="lb\tests\components\widget\FormTest::testEndForm"/>
      </line>
      <line nr="36">
        <covered by="lb\tests\components\SecurityPasswordTest::testGeneratePasswordHash"/>
        <covered by="lb\tests\components\SecurityPasswordTest::testVerifyPassword"/>
        <covered by="lb\tests\components\SecurityTest::testGenerateCsrfToken"/>
        <covered by="lb\tests\components\distribution\FlexiHashTest::testLookUp"/>
        <covered by="lb\tests\components\widget\FormTest::testEndForm"/>
      </line>
      <line nr="37">
        <covered by="lb\tests\components\SecurityTest::testGenerateCsrfToken"/>
        <covered by="lb\tests\components\distribution\FlexiHashTest::testLookUp"/>
        <covered by="lb\tests\components\widget\FormTest::testEndForm"/>
      </line>
      <line nr="38">
        <covered by="lb\tests\components\SecurityTest::testGenerateCsrfToken"/>
        <covered by="lb\tests\components\distribution\FlexiHashTest::testLookUp"/>
        <covered by="lb\tests\components\widget\FormTest::testEndForm"/>
      </line>
      <line nr="39">
        <covered by="lb\tests\components\SecurityPasswordTest::testGeneratePasswordHash"/>
        <covered by="lb\tests\components\SecurityPasswordTest::testVerifyPassword"/>
        <covered by="lb\tests\components\distribution\FlexiHashTest::testLookUp"/>
      </line>
      <line nr="40">
        <covered by="lb\tests\components\distribution\FlexiHashTest::testLookUp"/>
      </line>
      <line nr="41">
        <covered by="lb\tests\components\distribution\FlexiHashTest::testLookUp"/>
      </line>
      <line nr="42">
        <covered by="lb\tests\components\SecurityPasswordTest::testGeneratePasswordHash"/>
        <covered by="lb\tests\components\SecurityPasswordTest::testVerifyPassword"/>
      </line>
      <line nr="45">
        <covered by="lb\tests\components\SecurityPasswordTest::testGeneratePasswordHash"/>
        <covered by="lb\tests\components\SecurityPasswordTest::testVerifyPassword"/>
      </line>
      <line nr="46">
        <covered by="lb\tests\components\SecurityPasswordTest::testGeneratePasswordHash"/>
        <covered by="lb\tests\components\SecurityPasswordTest::testVerifyPassword"/>
      </line>
      <line nr="47">
        <covered by="lb\tests\components\SecurityPasswordTest::testGeneratePasswordHash"/>
        <covered by="lb\tests\components\SecurityPasswordTest::testVerifyPassword"/>
      </line>
      <line nr="52">
        <covered by="lb\tests\components\SecurityPasswordTest::testGeneratePasswordHash"/>
        <covered by="lb\tests\components\SecurityPasswordTest::testVerifyPassword"/>
        <covered by="lb\tests\components\SecurityTest::testGenerateCsrfToken"/>
        <covered by="lb\tests\components\distribution\FlexiHashTest::testLookUp"/>
        <covered by="lb\tests\components\widget\FormTest::testEndForm"/>
      </line>
      <line nr="63">
        <covered by="lb\tests\components\distribution\FlexiHashTest::testLookUp"/>
      </line>
      <line nr="64">
        <covered by="lb\tests\components\distribution\FlexiHashTest::testLookUp"/>
      </line>
      <line nr="65">
        <covered by="lb\tests\components\distribution\FlexiHashTest::testLookUp"/>
      </line>
      <line nr="66">
        <covered by="lb\tests\components\distribution\FlexiHashTest::testLookUp"/>
      </line>
      <line nr="67">
        <covered by="lb\tests\components\distribution\FlexiHashTest::testLookUp"/>
      </line>
      <line nr="68">
        <covered by="lb\tests\components\distribution\FlexiHashTest::testLookUp"/>
      </line>
      <line nr="70">
        <covered by="lb\tests\components\distribution\FlexiHashTest::testLookUp"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">lb</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">components</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">helpers</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">lb</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">BaseClass</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">lastguest</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">Murmur</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">lb</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">components</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">error_handlers</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ParamException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HashHelper</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">BaseClass</token>
      </line>
      <line no="10">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">    </token>
        <token name="T_COMMENT">//Hash Algorithms</token>
      </line>
      <line no="12">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MD5_HASH</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'md5'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SHA1_HASH</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'sha1'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CRYPT_HASH</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'crypt'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PASSWORD_HASH</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'password_hash'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16"/>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="18">
        <token name="T_DOC_COMMENT">     * Hashing</token>
      </line>
      <line no="19">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="20">
        <token name="T_DOC_COMMENT">     * @param  $str</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT">     * @param  string $algo</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT">     * @param  string $hmacKey</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     * @param  bool   $rawOuput</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     * @param  null   $salt</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT">     * @param  int    $passwordAlgo</token>
      </line>
      <line no="26">
        <token name="T_DOC_COMMENT">     * @param  array  $passwordOptions</token>
      </line>
      <line no="27">
        <token name="T_DOC_COMMENT">     * @return bool|string</token>
      </line>
      <line no="28">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">hash</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$str</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$algo</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MD5_HASH</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hmacKey</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rawOuput</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$salt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$passwordAlgo</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">PASSWORD_DEFAULT</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$passwordOptions</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$hmacKey</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">in_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$algo</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MD5_HASH</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">SHA1_HASH</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">hash_hmac</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$algo</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$str</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hmacKey</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rawOuput</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="34"/>
      <line no="35">
        <token name="T_WHITESPACE">        </token>
        <token name="T_SWITCH">switch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$algo</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">MD5_HASH</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$hashCode</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">md5</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$str</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rawOuput</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">SHA1_HASH</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$hashCode</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sha1</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$str</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rawOuput</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">CRYPT_HASH</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$hashCode</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">crypt</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$str</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$salt</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">PASSWORD_HASH</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$hashCode</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">password_hash</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$str</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$passwordAlgo</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$passwordOptions</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">        </token>
        <token name="T_DEFAULT">default</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$hashCode</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">md5</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$str</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rawOuput</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="51"/>
      <line no="52">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hashCode</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="54"/>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="56">
        <token name="T_DOC_COMMENT">     * Flexi hashing</token>
      </line>
      <line no="57">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="58">
        <token name="T_DOC_COMMENT">     * @param  $str</token>
      </line>
      <line no="59">
        <token name="T_DOC_COMMENT">     * @return int</token>
      </line>
      <line no="60">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">flexiHash</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$str</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$md5</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">self</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">hash</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$str</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">8</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$seed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">31</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$hash</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOR">for</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">8</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_INC">++</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$hash</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hash</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MULT">*</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$seed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS">+</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ord</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$md5</token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$i</token>
        <token name="T_INC">++</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$hash</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AMPERSAND">&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0x7FFFFFFF</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="72"/>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="74">
        <token name="T_DOC_COMMENT">     * Murmurhash 3</token>
      </line>
      <line no="75">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="76">
        <token name="T_DOC_COMMENT">     * @param  $str</token>
      </line>
      <line no="77">
        <token name="T_DOC_COMMENT">     * @param  int  $seed</token>
      </line>
      <line no="78">
        <token name="T_DOC_COMMENT">     * @param  bool $isInt</token>
      </line>
      <line no="79">
        <token name="T_DOC_COMMENT">     * @param  int  $version</token>
      </line>
      <line no="80">
        <token name="T_DOC_COMMENT">     * @return mixed</token>
      </line>
      <line no="81">
        <token name="T_DOC_COMMENT">     * @throws ParamException</token>
      </line>
      <line no="82">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">murmurhash</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$str</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">int</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$seed</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isInt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$version</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">3</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$version</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_EQUAL">!=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">3</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ParamException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Murmurhash'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$version</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">' not supported'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="88"/>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$isInt</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Murmur</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">hash3_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$str</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$seed</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Murmur</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">hash3</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$str</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$seed</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="91">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="92"/>
    </source>
  </file>
</phpunit>
