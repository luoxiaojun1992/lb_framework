<?xml version="1.0"?>
<phpunit xmlns="http://schema.phpunit.de/coverage/1.0">
  <file name="ActiveRecord.php" path="/db/mongodb">
    <totals>
      <lines total="335" comments="159" code="176" executable="211" executed="0" percent="0.00"/>
      <methods count="7" tested="0" percent="0.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="lb\components\db\mongodb\ActiveRecord" start="9" executable="211" executed="0" crap="4830">
      <package full="" name="" sub="" category=""/>
      <namespace name="lb\components\db\mongodb"/>
      <method name="setAttributes" signature="setAttributes($attributes = [])" start="17" end="33" crap="30" executable="14" executed="0" coverage="0"/>
      <method name="findAll" signature="findAll()" start="38" end="63" crap="72" executable="25" executed="0" coverage="0"/>
      <method name="findByConditions" signature="findByConditions($conditions = [])" start="69" end="94" crap="72" executable="25" executed="0" coverage="0"/>
      <method name="deleteByPk" signature="deleteByPk($primary_key)" start="155" end="164" crap="6" executable="9" executed="0" coverage="0"/>
      <method name="deleteByConditions" signature="deleteByConditions($conditions)" start="170" end="177" crap="6" executable="7" executed="0" coverage="0"/>
      <method name="valid" signature="valid()" start="182" end="298" crap="1332" executable="100" executed="0" coverage="0"/>
      <method name="save" signature="save()" start="303" end="334" crap="72" executable="31" executed="0" coverage="0"/>
    </class>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2"/>
      <line no="3">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">lb</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">components</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">db</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">mongodb</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="4"/>
      <line no="5">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">lb</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">components</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">db</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">AbstractActiveRecord</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="6">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">lb</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">components</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">helpers</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ArrayHelper</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">lb</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">components</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">helpers</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ValidationHelper</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="8"/>
      <line no="9">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ActiveRecord</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AbstractActiveRecord</token>
      </line>
      <line no="10">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="11">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_primary_key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'_id'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="14">
        <token name="T_DOC_COMMENT">     * @param array $attributes</token>
      </line>
      <line no="15">
        <token name="T_DOC_COMMENT">     * @return $this|null</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="17">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setAttributes</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attributes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="19">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">is_single</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attributes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$attribute_name</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$attribute_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">array_key_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attribute_name</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_attributes</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_object</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attribute_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_STRING">settype</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attribute_value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">gettype</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_attributes</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$attribute_name</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="25">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_attributes</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$attribute_name</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$attribute_value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="28"/>
      <line no="29">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="31"/>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="34"/>
      <line no="35">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="36">
        <token name="T_DOC_COMMENT">     * @return array|ActiveRecord|ActiveRecord[]</token>
      </line>
      <line no="37">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">findAll</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">is_single</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Dao</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">component</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">read</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STATIC">static</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">TABLE_NAME</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$models</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">                </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$attributes</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$model_class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">className</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$model_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$attributes_array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attributes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_EQUAL">!=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPrimaryName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_VARIABLE">$attributes_array</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_VARIABLE">$attributes_array</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">__toString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setAttributes</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attributes_array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">is_new_record</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$models</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$models</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$models</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$models</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$models</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="64"/>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="66">
        <token name="T_DOC_COMMENT">     * @param array $conditions</token>
      </line>
      <line no="67">
        <token name="T_DOC_COMMENT">     * @return array|ActiveRecord[]|ActiveRecord</token>
      </line>
      <line no="68">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">findByConditions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$conditions</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">is_single</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Dao</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">component</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">read</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STATIC">static</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">TABLE_NAME</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$conditions</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$models</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">                </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$result</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$attributes</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$model_class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STATIC">static</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">className</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$model_class</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$attributes_array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attributes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_EQUAL">!=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPrimaryName</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_VARIABLE">$attributes_array</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_VARIABLE">$attributes_array</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">__toString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setAttributes</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attributes_array</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">is_new_record</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$models</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$model</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$models</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$models</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">1</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$models</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$models</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="95"/>
      <line no="96">
        <token name="T_COMMENT">//    public function countAll()</token>
      </line>
      <line no="97">
        <token name="T_COMMENT">//    {</token>
      </line>
      <line no="98">
        <token name="T_COMMENT">//        if ($this-&gt;is_single) {</token>
      </line>
      <line no="99">
        <token name="T_COMMENT">//            return Dao::component()-&gt;select(['*'])-&gt;from(static::TABLE_NAME)-&gt;count();</token>
      </line>
      <line no="100">
        <token name="T_COMMENT">//        }</token>
      </line>
      <line no="101">
        <token name="T_COMMENT">//        return 0;</token>
      </line>
      <line no="102">
        <token name="T_COMMENT">//    }</token>
      </line>
      <line no="103">
        <token name="T_COMMENT">//</token>
      </line>
      <line no="104">
        <token name="T_COMMENT">//    public function findByPk($primary_key)</token>
      </line>
      <line no="105">
        <token name="T_COMMENT">//    {</token>
      </line>
      <line no="106">
        <token name="T_COMMENT">//        if ($this-&gt;is_single) {</token>
      </line>
      <line no="107">
        <token name="T_COMMENT">//            $dao = Dao::component()</token>
      </line>
      <line no="108">
        <token name="T_COMMENT">//                -&gt;select(['*'])</token>
      </line>
      <line no="109">
        <token name="T_COMMENT">//                -&gt;from(static::TABLE_NAME)</token>
      </line>
      <line no="110">
        <token name="T_COMMENT">//                -&gt;where([$this-&gt;_primary_key =&gt; $primary_key])</token>
      </line>
      <line no="111">
        <token name="T_COMMENT">//                -&gt;limit(1);</token>
      </line>
      <line no="112">
        <token name="T_COMMENT">//</token>
      </line>
      <line no="113">
        <token name="T_COMMENT">//            $is_related_model_exists = false;</token>
      </line>
      <line no="114">
        <token name="T_COMMENT">//            if ($this-&gt;relations &amp;&amp; count($this-&gt;relations) &gt;= 3) {</token>
      </line>
      <line no="115">
        <token name="T_COMMENT">//                list($self_field, $joined_table, $joined_table_field) = $this-&gt;relations;</token>
      </line>
      <line no="116">
        <token name="T_COMMENT">//                $related_model_class = 'app\models\\' . ucfirst($joined_table);</token>
      </line>
      <line no="117">
        <token name="T_COMMENT">//                if (array_key_exists($self_field, $this-&gt;_attributes) &amp;&amp; class_exists($related_model_class)) {</token>
      </line>
      <line no="118">
        <token name="T_COMMENT">//                    $is_related_model_exists = true;</token>
      </line>
      <line no="119">
        <token name="T_COMMENT">//                    $related_model_fields = (new $related_model_class())-&gt;getFields();</token>
      </line>
      <line no="120">
        <token name="T_COMMENT">//                    foreach ($related_model_fields as $key =&gt; $related_model_field) {</token>
      </line>
      <line no="121">
        <token name="T_COMMENT">//                        $related_model_fields[$key] = implode('.', [$joined_table, $related_model_field]) . ' AS ' . implode('_', [$joined_table, $related_model_field]);</token>
      </line>
      <line no="122">
        <token name="T_COMMENT">//                    }</token>
      </line>
      <line no="123">
        <token name="T_COMMENT">//                    $self_fields = $this-&gt;getFields();</token>
      </line>
      <line no="124">
        <token name="T_COMMENT">//                    foreach ($self_fields as $key =&gt; $field) {</token>
      </line>
      <line no="125">
        <token name="T_COMMENT">//                        $self_fields[$key] = implode('.', [static::TABLE_NAME, $field]);</token>
      </line>
      <line no="126">
        <token name="T_COMMENT">//                    }</token>
      </line>
      <line no="127">
        <token name="T_COMMENT">//                    $fields = array_merge($related_model_fields, $self_fields);</token>
      </line>
      <line no="128">
        <token name="T_COMMENT">//                    $dao-&gt;select($fields)</token>
      </line>
      <line no="129">
        <token name="T_COMMENT">//                        -&gt;join($joined_table, [$self_field =&gt; implode('.', [$joined_table, $joined_table_field])]);</token>
      </line>
      <line no="130">
        <token name="T_COMMENT">//                }</token>
      </line>
      <line no="131">
        <token name="T_COMMENT">//            }</token>
      </line>
      <line no="132">
        <token name="T_COMMENT">//</token>
      </line>
      <line no="133">
        <token name="T_COMMENT">//            $attributes = $dao-&gt;find();</token>
      </line>
      <line no="134">
        <token name="T_COMMENT">//            if ($attributes) {</token>
      </line>
      <line no="135">
        <token name="T_COMMENT">//                $model_class = get_class($this);</token>
      </line>
      <line no="136">
        <token name="T_COMMENT">//                if ($is_related_model_exists &amp;&amp; isset($related_model_class) &amp;&amp; isset($self_field)) {</token>
      </line>
      <line no="137">
        <token name="T_COMMENT">//                    $related_model = new $related_model_class();</token>
      </line>
      <line no="138">
        <token name="T_COMMENT">//                    $related_model-&gt;setAttributes($attributes);</token>
      </line>
      <line no="139">
        <token name="T_COMMENT">//                    $related_model-&gt;is_new_record = false;</token>
      </line>
      <line no="140">
        <token name="T_COMMENT">//                    $attributes[$self_field] = $related_model;</token>
      </line>
      <line no="141">
        <token name="T_COMMENT">//                }</token>
      </line>
      <line no="142">
        <token name="T_COMMENT">//                $model = new $model_class();</token>
      </line>
      <line no="143">
        <token name="T_COMMENT">//                $model-&gt;setAttributes($attributes);</token>
      </line>
      <line no="144">
        <token name="T_COMMENT">//                $model-&gt;is_new_record = false;</token>
      </line>
      <line no="145">
        <token name="T_COMMENT">//                return $model;</token>
      </line>
      <line no="146">
        <token name="T_COMMENT">//            }</token>
      </line>
      <line no="147">
        <token name="T_COMMENT">//        }</token>
      </line>
      <line no="148">
        <token name="T_COMMENT">//        return false;</token>
      </line>
      <line no="149">
        <token name="T_COMMENT">//    }</token>
      </line>
      <line no="150"/>
      <line no="151">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="152">
        <token name="T_DOC_COMMENT">     * @param $primary_key</token>
      </line>
      <line no="153">
        <token name="T_DOC_COMMENT">     * @return bool</token>
      </line>
      <line no="154">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">deleteByPk</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$primary_key</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="157">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">is_single</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Dao</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">component</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">delete</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STATIC">static</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">TABLE_NAME</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_primary_key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">MongoDB</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">BSON</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ObjectID</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$primary_key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="165"/>
      <line no="166">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="167">
        <token name="T_DOC_COMMENT">     * @param $conditions</token>
      </line>
      <line no="168">
        <token name="T_DOC_COMMENT">     * @return bool</token>
      </line>
      <line no="169">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">deleteByConditions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$conditions</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">is_single</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Dao</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">component</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">delete</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STATIC">static</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">TABLE_NAME</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$conditions</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="177">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="178"/>
      <line no="179">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="180">
        <token name="T_DOC_COMMENT">     * @return bool</token>
      </line>
      <line no="181">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">valid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">beforeValid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="185">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="186">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="187"/>
      <line no="188">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$is_valid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errors</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$rules</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">rules</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$rules</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$rules</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rule</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="193">
        <token name="T_WHITESPACE">                </token>
        <token name="T_LIST">list</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attributes</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rule_type</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$condition</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$rule</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="194">
        <token name="T_WHITESPACE">                </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attributes</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">array_key_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_attributes</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$attribute_value</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_attributes</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_SWITCH">switch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$rule_type</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'length'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$condition</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$op</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_SWITCH">switch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$op</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="201">
        <token name="T_WHITESPACE">                                        </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'max'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="202">
        <token name="T_WHITESPACE">                                            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attribute_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="203">
        <token name="T_WHITESPACE">                                                </token>
        <token name="T_VARIABLE">$is_valid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="204">
        <token name="T_WHITESPACE">                                                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errors</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">The length of </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> can't be more than </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="205">
        <token name="T_WHITESPACE">                                            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="206">
        <token name="T_WHITESPACE">                                            </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">                                        </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'min'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="208">
        <token name="T_WHITESPACE">                                            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attribute_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">                                                </token>
        <token name="T_VARIABLE">$is_valid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">                                                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errors</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">The length of </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> can't be less than </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="211">
        <token name="T_WHITESPACE">                                            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="212">
        <token name="T_WHITESPACE">                                            </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="213">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'mb_length'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$condition</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$op</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_SWITCH">switch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$op</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">                                        </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'max'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="220">
        <token name="T_WHITESPACE">                                            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="221">
        <token name="T_WHITESPACE">                                                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">mb_strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attribute_value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'utf8'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="222">
        <token name="T_WHITESPACE">                                                    </token>
        <token name="T_VARIABLE">$is_valid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="223">
        <token name="T_WHITESPACE">                                                    </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errors</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">The length of </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> can't be more than </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="224">
        <token name="T_WHITESPACE">                                                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="225">
        <token name="T_WHITESPACE">                                            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="226">
        <token name="T_WHITESPACE">                                                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">ArrayHelper</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">is_multi_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="227">
        <token name="T_WHITESPACE">                                                    </token>
        <token name="T_LIST">list</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$encoding</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="228">
        <token name="T_WHITESPACE">                                                    </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$encoding</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="229">
        <token name="T_WHITESPACE">                                                        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">mb_strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attribute_value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$encoding</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_GT">&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="230">
        <token name="T_WHITESPACE">                                                            </token>
        <token name="T_VARIABLE">$is_valid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="231">
        <token name="T_WHITESPACE">                                                            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errors</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">The length of </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> can't be more than </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">                                                        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="233">
        <token name="T_WHITESPACE">                                                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="234">
        <token name="T_WHITESPACE">                                                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="235">
        <token name="T_WHITESPACE">                                            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="236">
        <token name="T_WHITESPACE">                                            </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="237">
        <token name="T_WHITESPACE">                                        </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'min'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="238">
        <token name="T_WHITESPACE">                                            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">is_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="239">
        <token name="T_WHITESPACE">                                                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">mb_strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attribute_value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'utf8'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="240">
        <token name="T_WHITESPACE">                                                    </token>
        <token name="T_VARIABLE">$is_valid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="241">
        <token name="T_WHITESPACE">                                                    </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errors</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">The length of </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> can't be less than </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="242">
        <token name="T_WHITESPACE">                                                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="243">
        <token name="T_WHITESPACE">                                            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="244">
        <token name="T_WHITESPACE">                                                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">ArrayHelper</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">is_multi_array</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_GREATER_OR_EQUAL">&gt;=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="245">
        <token name="T_WHITESPACE">                                                    </token>
        <token name="T_LIST">list</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$encoding</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$condition_value</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="246">
        <token name="T_WHITESPACE">                                                    </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">is_string</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$encoding</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">is_int</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="247">
        <token name="T_WHITESPACE">                                                        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">mb_strlen</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attribute_value</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$encoding</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="248">
        <token name="T_WHITESPACE">                                                            </token>
        <token name="T_VARIABLE">$is_valid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="249">
        <token name="T_WHITESPACE">                                                            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errors</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">The length of </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> can't be less than </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$value</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="250">
        <token name="T_WHITESPACE">                                                        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="251">
        <token name="T_WHITESPACE">                                                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="252">
        <token name="T_WHITESPACE">                                                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="253">
        <token name="T_WHITESPACE">                                            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="254">
        <token name="T_WHITESPACE">                                            </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="255">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="256">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="257">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="258">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'required'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="259">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">ValidationHelper</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">isRequired</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attribute_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="260">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_VARIABLE">$is_valid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="261">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errors</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">The </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> is required.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="262">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="263">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="264">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'email'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="265">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">ValidationHelper</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">isEmail</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attribute_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="266">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_VARIABLE">$is_valid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="267">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errors</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">The </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> is not a valid email.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="268">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="269">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="270">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ip'</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="271">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">ValidationHelper</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">isIP</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$attribute_value</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="272">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_VARIABLE">$is_valid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="273">
        <token name="T_WHITESPACE">                                    </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">errors</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_ENCAPSED_AND_WHITESPACE">The </token>
        <token name="T_CURLY_OPEN">{</token>
        <token name="T_VARIABLE">$attribute</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_ENCAPSED_AND_WHITESPACE"> is not a valid ip.</token>
        <token name="T_DOUBLE_QUOTES">"</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="274">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="275">
        <token name="T_WHITESPACE">                                </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="276">
        <token name="T_COMMENT">//                            case 'unique':</token>
      </line>
      <line no="277">
        <token name="T_COMMENT">//                                if ($this-&gt;is_new_record) {</token>
      </line>
      <line no="278">
        <token name="T_COMMENT">//                                    if (static::model()-&gt;findByConditions([$attribute =&gt; $attribute_value])) {</token>
      </line>
      <line no="279">
        <token name="T_COMMENT">//                                        $is_valid = false;</token>
      </line>
      <line no="280">
        <token name="T_COMMENT">//                                        $this-&gt;errors[] = "The {$attribute} is not unique.";</token>
      </line>
      <line no="281">
        <token name="T_COMMENT">//                                    }</token>
      </line>
      <line no="282">
        <token name="T_COMMENT">//                                } else {</token>
      </line>
      <line no="283">
        <token name="T_COMMENT">//                                    if (static::model()-&gt;findByConditions([$attribute =&gt; $attribute_value, $this-&gt;getPrimaryName() =&gt; ['!=' =&gt; $this-&gt;getPrimaryKey()]])) {</token>
      </line>
      <line no="284">
        <token name="T_COMMENT">//                                        $is_valid = false;</token>
      </line>
      <line no="285">
        <token name="T_COMMENT">//                                        $this-&gt;errors[] = "The {$attribute} is not unique.";</token>
      </line>
      <line no="286">
        <token name="T_COMMENT">//                                    }</token>
      </line>
      <line no="287">
        <token name="T_COMMENT">//                                }</token>
      </line>
      <line no="288">
        <token name="T_COMMENT">//                                break;</token>
      </line>
      <line no="289">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="290">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="291">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="292">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="293">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="294"/>
      <line no="295">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">afterValid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="296"/>
      <line no="297">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$is_valid</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="298">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="299"/>
      <line no="300">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="301">
        <token name="T_DOC_COMMENT">     * @return array|bool|mixed</token>
      </line>
      <line no="302">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="303">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">save</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="304">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="305">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">is_single</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="306">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">beforeSave</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="307">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">is_new_record</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="308">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$values</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_attributes</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="309">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">array_key_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_primary_key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_attributes</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="310">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_primary_key</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="311">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_UNSET">unset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$values</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_primary_key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="312">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="313">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$res</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Dao</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">component</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STATIC">static</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">TABLE_NAME</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$values</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="314">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$res</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="315">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_primary_key</token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$res</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">__toString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="316">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">is_new_record</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="317">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="318">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="319">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$values</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_attributes</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="320">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$primary_key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="321">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">array_key_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_primary_key</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_attributes</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="322">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$primary_key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_attributes</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_primary_key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="323">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_UNSET">unset</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$values</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_primary_key</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="324">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="325">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$res</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Dao</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">component</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">update</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STATIC">static</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">TABLE_NAME</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">_primary_key</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">MongoDB</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">BSON</token>
        <token name="T_NS_SEPARATOR">\</token>
        <token name="T_STRING">ObjectID</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$primary_key</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'$set'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$values</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="326">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="327">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$res</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="328">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">afterSave</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="329">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="330">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$res</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="331">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="332">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="333">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="334">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="335">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="336"/>
    </source>
  </file>
</phpunit>
